{
  "name": "zero-knowledge-c-run-code",
  "displayName": "Zero Knowledge C/C++ Run Code",
  "description": "Run C and C++ code files directly from the context menu with a single click",
  "version": "0.1.4",
  "publisher": "zeroknowledge",
  "icon": "logo.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/masudranaxpert/zero-knowledge-c-run-code"
  },
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Other",
    "Programming Languages"
  ],
  "activationEvents": [
    "onLanguage:c",
    "onLanguage:cpp",
    "onLanguage:python"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "run-c-code.runCFile",
        "title": "Run C/C++ Code"
      },
      {
        "command": "run-c-code.runSelectedCode",
        "title": "Run Selected C/C++ Code"
      },
      {
        "command": "run-c-code.refactorWithGemini",
        "title": "Improve Text with Gemini"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "when": "resourceExtname == .c || resourceExtname == .cpp",
          "command": "run-c-code.runCFile",
          "group": "navigation"
        }
      ],
      "editor/context": [
        {
          "when": "resourceExtname == .c || resourceExtname == .cpp",
          "command": "run-c-code.runCFile",
          "group": "navigation"
        },
        {
          "when": "editorHasSelection && (editorLangId == c || editorLangId == cpp || editorLangId == python)",
          "command": "run-c-code.refactorWithGemini",
          "group": "1_modification"
        }
      ]
    },
    "keybindings": [
      {
        "command": "run-c-code.runCFile",
        "key": "ctrl+shift+b",
        "mac": "cmd+shift+b",
        "when": "editorLangId == c || editorLangId == cpp"
      },
      {
        "command": "run-c-code.refactorWithGemini",
        "key": "ctrl+alt+e",
        "mac": "cmd+alt+e",
        "when": "editorHasSelection && (editorLangId == c || editorLangId == cpp || editorLangId == python)"
      }
    ],
    "configuration": {
      "title": "C/C++ Run Code",
      "properties": {
        "run-c-code.useBuildFolder": {
          "type": "boolean",
          "default": true,
          "description": "Compile into a 'build' subfolder and run from parent using build/<exe>",
          "order": 102
        },
        "run-c-code.useNewTerminalPerFile": {
          "type": "boolean",
          "default": false,
          "description": "Use separate terminals for each file instead of using one global terminal for all files",
          "order": 101
        },
        "run-c-code.closePreviousTerminals": {
          "type": "boolean",
          "default": false,
          "description": "Close previous terminals when opening new files (only applies when using single global terminal)",
          "order": 100
        },
        "run-c-code.compilerType": {
          "type": "string",
          "enum": [
            "gcc",
            "g++",
            "clang",
            "clang++"
          ],
          "enumDescriptions": [
            "GNU C Compiler",
            "GNU C++ Compiler",
            "LLVM C Compiler",
            "LLVM C++ Compiler"
          ],
          "default": "auto",
          "description": "Compiler type to use (auto-detects based on file extension if set to 'auto')"
        },
        "run-c-code.compilerPath": {
          "type": "string",
          "default": "",
          "description": "Custom path to compiler (leave empty to use system default)"
        },
        "run-c-code.enableWarnings": {
          "type": "boolean",
          "default": true,
          "description": "Enable compiler warnings (-Wall)"
        },
        "run-c-code.optimizationLevel": {
          "type": "string",
          "enum": [
            "none",
            "O1",
            "O2",
            "O3",
            "Os"
          ],
          "enumDescriptions": [
            "No optimization",
            "Basic optimization",
            "Standard optimization",
            "Aggressive optimization",
            "Size optimization"
          ],
          "default": "none",
          "description": "Compiler optimization level",
          "order": 3
        },
        "run-c-code.additionalCompilerArgs": {
          "type": "string",
          "default": "",
          "description": "Additional custom compiler arguments",
          "order": 2
        },
        "run-c-code.runArgs": {
          "type": "string",
          "default": "",
          "description": "Command line arguments to pass to the compiled executable",
          "order": 1
        },
        "run-c-code.enableSyntaxCheck": {
          "type": "boolean",
          "default": false,
          "description": "Enable real-time checking for scanf missing & operator errors"
        },
        "run-c-code.saveFileBeforeRun": {
          "type": "boolean",
          "default": true,
          "description": "Automatically save the file before running it",
          "order": 103
        },
        "run-c-code.experimental.enableGeminiRefactor": {
          "type": "boolean",
          "default": false,
          "description": "[Experimental] Enable text refactoring and improvement using Gemini API.",
          "markdownDescription": "[Experimental] Enable text refactoring and improvement using Gemini API. Use **Ctrl+Alt+E** (Windows/Linux) or **Cmd+Alt+E** (macOS) to run on selected text.",
          "order": 190
        },
        "run-c-code.geminiApiKey": {
          "type": "string",
          "default": "",
          "description": "Your Google AI Studio API Key for using Gemini features. Keep this private.",
          "markdownDescription": "Your Google AI Studio API Key for using Gemini features. Get your key from [Google AI Studio](https://aistudio.google.com/app/apikey). Keep this private.",
          "format": "password",
          "order": 191
        },
        "run-c-code.geminiModel": {
          "type": "string",
          "default": "gemini-2.5-flash-lite",
          "enum": [
            "gemini-2.0-flash",
            "gemini-2.0-flash-lite",
            "gemini-2.5-flash-lite",
            "gemma-3-2b",
            "gemini-2.5-flash"
          ],
          "enumDescriptions": [
            "RPD → 200",
            "RPD → 200",
            "RPD → 1k",
            "RPD → 14k",
            "RPD → 250"
          ],
          "description": "Select the Gemini model to use for refactoring",
          "order": 192
        },
        "run-c-code.geminiExtraRules": {
          "type": "string",
          "default": "",
          "description": "Optional extra rules or style notes to append to the Gemini prompt",
          "markdownDescription": "Add your own additional rules/prompts (one paragraph). These will be appended to the built-in rules while refactoring.",
          "order": 193
        }
      }
    },
    "snippets": [
      {
        "language": "c",
        "path": "./snippets/c.json"
      },
      {
        "language": "cpp",
        "path": "./snippets/cpp.json"
      }
    ]
  },
  "scripts": {
    "lint": "eslint . --quiet",
    "build": "esbuild ./extension.js --bundle --outfile=dist/extension.js --platform=node --external:vscode --format=cjs",
    "test": "echo \"No tests specified\"",
    "vscode:prepublish": "npm run build",
    "watch": "echo \"Watch mode not configured\"",
    "package": "vsce package --no-yarn"
  },
  "devDependencies": {
    "@types/vscode": "^1.60.0",
    "esbuild": "^0.25.11",
    "eslint": "^8.0.0"
  },
  "dependencies": {
    "@google/generative-ai": "^0.24.1"
  }
}
